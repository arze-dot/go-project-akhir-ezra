definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  controllers.LoginResponse:
    properties:
      token:
        type: string
    type: object
  structs.Budget:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      id:
        type: integer
      price:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
      user_id:
        type: integer
    type: object
  structs.BudgetStatus:
    properties:
      budget_price:
        type: number
      budget_remaining:
        type: number
      category_name:
        type: string
      onTrack:
        type: boolean
      totalExpense:
        type: number
    type: object
  structs.Category:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  structs.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  structs.Transaction:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      expense:
        type: integer
      id:
        type: integer
      income:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      user_id:
        type: integer
    type: object
  structs.User:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      id:
        type: integer
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      username:
        type: string
    type: object
host: go-project-akhir-ezra-production.up.railway.app
info:
  contact: {}
  description: This is a sample API for managing budgets, categories, and transactions.
  title: Budget Tracking API
  version: "1.0"
paths:
  /budget:
    get:
      description: Retrieve a list of all budgets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Budget'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all budgets
      tags:
      - budgets
    post:
      consumes:
      - application/json
      description: Create a new budget entry
      parameters:
      - description: Budget data
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/structs.Budget'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Budget'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Insert a new budget
      tags:
      - budgets
  /budget-status:
    get:
      consumes:
      - application/json
      description: Retrieve the budget status for a given user and category
      parameters:
      - description: Category ID
        in: query
        name: category_id
        required: true
        type: integer
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Budget status
          schema:
            $ref: '#/definitions/structs.BudgetStatus'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Get budget status
      tags:
      - budgets
  /budget/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the budget entry with the specified ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Budget'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a budget
      tags:
      - budgets
    put:
      consumes:
      - application/json
      description: Update the budget entry with the specified ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated budget data
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/structs.Budget'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Budget'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing budget
      tags:
      - budgets
  /category:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a new category entry
      parameters:
      - description: Category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/structs.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Category'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Insert a new category
      tags:
      - categories
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the category entry with the specified ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Category'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update the category entry with the specified ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/structs.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing category
      tags:
      - categories
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Invalid username or password
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Database error or token generation failure
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: User login
      tags:
      - auth
  /transaction:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all transactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Transaction'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get all transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Create a new transaction entry
      parameters:
      - description: Transaction data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/structs.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Transaction'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Insert a new transaction
      tags:
      - transactions
  /transaction/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the transaction entry with the specified ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Transaction'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Delete a transaction
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update the transaction entry with the specified ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated transaction data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/structs.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Transaction'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Update an existing transaction
      tags:
      - transactions
  /user:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user entry
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.User'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Insert a new user
      tags:
      - users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the user entry with the specified ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.User'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Delete a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the user entry with the specified ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/structs.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.User'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update an existing user
      tags:
      - users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
